// --- Keys & State ---
const KEYS={coins:'pro_coins',level:'pro_level',progress:'pro_progress',leitner:'pro_leitner'};
const $=s=>document.querySelector(s), $$=s=>Array.from(document.querySelectorAll(s));
const shop=[{id:'meal',name:'Comida',cost:50},{id:'trip',name:'Viaje',cost:300},{id:'dance',name:'Baile',cost:60},{id:'massage',name:'Masaje',cost:120},{id:'surprise',name:'Sorpresa',cost:80},{id:'clothes',name:'Ropas',cost:200},{id:'earrings',name:'Pendientes',cost:90},{id:'flowers',name:'Flores',cost:40}];
const state={activeLevel:localStorage.getItem(KEYS.level)||'A1',coins:parseInt(localStorage.getItem(KEYS.coins)||'0',10),content:null,practice:{mode:'image',pool:[],index:0,correct:0}};
function toast(m){const t=$('#toast');t.textContent=m;t.classList.add('show');setTimeout(()=>t.classList.remove('show'),1400);} 
function speak(text){ if(!('speechSynthesis'in window))return; const u=new SpeechSynthesisUtterance(text);u.lang='sq-AL';speechSynthesis.cancel();speechSynthesis.speak(u);}
function setView(id){$$('.view').forEach(v=>v.classList.remove('active'));$('#view-'+id).classList.add('active');}
function addCoins(n){state.coins+=n;localStorage.setItem(KEYS.coins,state.coins);$('#coinCount').textContent=state.coins;}
$('#coinCount').textContent=state.coins; $$('.nav-btn').forEach(b=>b.onclick=()=>setView(b.dataset.view)); $('#activeLevel').textContent=state.activeLevel;

// --- Load content ---
async function load(){ const res=await fetch('i18n/content.json'); state.content=await res.json(); buildLevels(); buildShop(); buildTests(); setupPractice(); setupFlashcards(); }
function getProg(l){const p=JSON.parse(localStorage.getItem(KEYS.progress)||'{}');return p[l]||{score:0,passed:false};}
function setProg(l,o){const p=JSON.parse(localStorage.getItem(KEYS.progress)||'{}');p[l]=o;localStorage.setItem(KEYS.progress,JSON.stringify(p));}
function buildLevels(){ const grid=$('#levelGrid'); grid.innerHTML=''; const lvls=['A1','B1','B2','C1']; lvls.forEach((lvl,i)=>{ const prev=i?getProg(lvls[i-1]).passed:true; const locked=!prev; const total=state.content[lvl].words.length; const card=document.createElement('div'); card.className='level-card'+(locked?' locked':''); card.innerHTML=`<div class="meta"><h3>${lvl}</h3></div><div class="progress"><div class="progress-bar" style="width:${Math.min(100,getProg(lvl).score)}%"></div></div><p class="muted">${total} Ã­tems</p><div style="display:flex;gap:8px"><button class="btn" ${locked?'disabled':''} data-start="${lvl}">Estudiar</button><button class="btn secondary" ${locked?'disabled':''} data-test="${lvl}">Test</button></div>`; grid.appendChild(card);}); grid.querySelectorAll('[data-start]').forEach(b=>b.onclick=()=>{state.activeLevel=b.dataset.start;localStorage.setItem(KEYS.level,state.activeLevel);$('#activeLevel').textContent=state.activeLevel;setView('practice');setupPractice();}); grid.querySelectorAll('[data-test]').forEach(b=>b.onclick=()=>startTest(b.dataset.test));}

// --- Shop ---
function buildShop(){const ul=$('#rewardShop');ul.innerHTML='';const hist=$('#rewardHistory');const h=JSON.parse(localStorage.getItem('pro_hist')||'[]');hist.innerHTML=h.slice().reverse().map(i=>`<li>${i.name} â€” <small>${new Date(i.date).toLocaleString()}</small></li>`).join(''); shop.forEach(it=>{const li=document.createElement('li');li.innerHTML=`<strong>${it.name}</strong><span>${it.cost} ðŸª™</span>`;const btn=document.createElement('button');btn.className='btn';btn.textContent='Canjear';btn.onclick=()=>{if(state.coins<it.cost)return toast('Monedas insuficientes');addCoins(-it.cost);h.push({id:it.id,name:it.name,date:new Date().toISOString()});localStorage.setItem('pro_hist',JSON.stringify(h));buildShop();toast('Â¡Canjeado!');};li.appendChild(btn);ul.appendChild(li);});}

// --- Practice ---
function setupPractice(){ $$('.tab').forEach(t=>t.classList.remove('active')); document.querySelector(`.tab[data-mode="${state.practice.mode}"]`).classList.add('active'); $$('.tab').forEach(t=>t.onclick=()=>{state.practice.mode=t.dataset.mode;setupPractice();}); const lvl=state.content[state.activeLevel]; let pool=[]; if(state.practice.mode==='image'){pool=lvl.words.slice(0,80).map(w=>({type:'image',prompt:w.img,answer:w.sq,options:makeOpts(w.sq,lvl.words.map(x=>x.sq),4)}));} else if(state.practice.mode==='phrase'){pool=lvl.phrases.slice(0,40).map(p=>({type:'phrase',prompt:`ES: ${p.es}\nPL: ${p.pl}`,answer:p.sq,options:makeOpts(p.sq,lvl.phrases.map(x=>x.sq),3)}));} else {pool=lvl.phrases.slice(0,40).map(p=>({type:'builder',prompt:`${p.es} / ${p.pl}`,answer:p.sq,words:shuffle(p.sq.split(' '))}));} state.practice.pool=shuffle(pool).slice(0,20); state.practice.index=0; state.practice.correct=0; renderExercise();}
function makeOpts(correct, uni, n){const s=new Set([correct]);while(s.size<n){const c=uni[Math.floor(Math.random()*uni.length)]; if(c!==correct)s.add(c);}return shuffle([...s]);}
function shuffle(a){return a.sort(()=>Math.random()-0.5);}
function renderExercise(){ const root=$('#exerciseRoot'); root.innerHTML=''; const i=state.practice.index, pool=state.practice.pool; if(i>=pool.length){const score=Math.round((state.practice.correct/pool.length)*100);root.innerHTML=`<h3>Â¡Completado! ${score}%</h3>`;addCoins(state.practice.correct*2);const cur=getProg(state.activeLevel);setProg(state.activeLevel,{score:Math.max(cur.score,score),passed:(cur.passed||score>=80)});buildLevels();$('#exProg').style.width='100%';return;} const ex=pool[i]; const wrap=document.createElement('div'); wrap.className='exercise'; if(ex.type==='image'){wrap.innerHTML=`<div class="card"><img src="${ex.prompt}" alt="img" /><div class="label">Â¿CuÃ¡l es la palabra correcta en albanÃ©s?</div></div>`; const opts=document.createElement('div');opts.className='options'; ex.options.forEach(o=>{const b=document.createElement('button');b.className='btn';b.textContent=o;b.onclick=()=>check(o===ex.answer,ex.answer);opts.appendChild(b);}); wrap.appendChild(opts); const a=document.createElement('button');a.className='btn secondary';a.textContent='Audio SQ';a.onclick=()=>speak(ex.answer);wrap.appendChild(a);} else if(ex.type==='phrase'){const p=document.createElement('div');p.innerHTML=`<div class="card"><div class="label" style="padding:14px;white-space:pre-line">${ex.prompt}</div></div>`;wrap.appendChild(p); const opts=document.createElement('div');opts.className='options'; ex.options.forEach(o=>{const b=document.createElement('button');b.className='btn';b.textContent=o;b.onclick=()=>check(o===ex.answer,ex.answer);opts.appendChild(b);}); wrap.appendChild(opts); const a=document.createElement('button');a.className='btn secondary';a.textContent='Audio SQ';a.onclick=()=>speak(ex.answer);wrap.appendChild(a);} else {const prompt=document.createElement('div');prompt.className='muted';prompt.textContent=ex.prompt;wrap.appendChild(prompt); const area=document.createElement('div');area.className='drag-area';wrap.appendChild(area); const bank=document.createElement('div');bank.className='drag-area';wrap.appendChild(bank); ex.words.forEach(w=>{const c=document.createElement('span');c.className='chip';c.textContent=w;c.draggable=true;c.addEventListener('dragstart',e=>{e.dataTransfer.setData('text/plain',w);}); bank.appendChild(c);}); [area,bank].forEach(z=>{z.addEventListener('dragover',e=>e.preventDefault()); z.addEventListener('drop',e=>{e.preventDefault(); const w=e.dataTransfer.getData('text/plain'); const el=[...bank.children,...area.children].find(x=>x.textContent===w); if(el) z.appendChild(el);});}); const btn=document.createElement('button');btn.className='btn';btn.textContent='Comprobar';btn.onclick=()=>{const built=[...area.children].map(x=>x.textContent).join(' ').trim(); check(built===ex.answer,ex.answer);}; wrap.appendChild(btn); const a=document.createElement('button');a.className='btn secondary';a.textContent='Audio SQ';a.onclick=()=>speak(ex.answer);wrap.appendChild(a);} root.appendChild(wrap); $('#exProg').style.width=Math.round((i/pool.length)*100)+'%';}
function check(ok,sol){ if(ok){state.practice.correct++;addCoins(5);toast('âœ” Correcto');}else{toast('âœ– Incorrecto');} state.practice.index++; renderExercise();}
$('#btnSkip').onclick=()=>{state.practice.index++;renderExercise();};

// --- Mini-tests por tema ---
function buildTests(){ const grid=$('#testGrid'); grid.innerHTML=''; const lvl=state.content[state.activeLevel]; const themes=state.content[state.activeLevel].themes||[]; themes.forEach(th=>{const card=document.createElement('div');card.className='level-card';card.innerHTML=`<img src="${th.img}" style="width:100%;height:120px;object-fit:cover;border-radius:10px"/><h3>${th.name}</h3><button class="btn" data-theme="${th.id}">Empezar test</button>`; grid.appendChild(card);}); grid.querySelectorAll('[data-theme]').forEach(b=>b.onclick=()=>startThemeTest(b.dataset.theme));}
function startThemeTest(theme){ setView('minitests'); const lvl=state.content[state.activeLevel]; const words=lvl.words.filter(w=> (theme==='comida'&&w.img.includes('food')) || (theme==='casa'&&w.img.includes('house')) || (theme==='viaje'&&w.img.includes('travel')) || (theme==='compras'&&w.img.includes('market')) || (theme==='trabajo'&&w.img.includes('study')) || (theme==='cultura'&&w.img.includes('people')) ); const pool=shuffle(words).slice(0,10).map(w=>({type:'image',prompt:w.img,answer:w.sq,options:makeOpts(w.sq,words.map(x=>x.sq),4)})); const test={pool,index:0,correct:0}; const root=$('#testRoot'); root.innerHTML=''; function render(){ root.innerHTML=''; if(test.index>=test.pool.length){ const sc=Math.round(test.correct/test.pool.length*100); root.innerHTML=`<h3>Resultado: ${sc}%</h3>`; addCoins(test.correct*3); return;} const ex=test.pool[test.index]; const card=document.createElement('div'); card.className='card'; card.innerHTML=`<img src="${ex.prompt}"><div class="label">Elige la palabra correcta</div>`; root.appendChild(card); const opts=document.createElement('div'); opts.className='options'; ex.options.forEach(o=>{const b=document.createElement('button');b.className='btn';b.textContent=o;b.onclick=()=>{ if(o===ex.answer){test.correct++; addCoins(6); toast('âœ”');} else toast('âœ–'); test.index++; render();}; opts.appendChild(b);}); root.appendChild(opts);} render();}

// --- Flashcards (Leitner simple) ---
function setupFlashcards(){ const boxes=JSON.parse(localStorage.getItem(KEYS.leitner)||'{"1":[],"2":[],"3":[],"4":[],"5":[]}'); if(boxes['1'].length===0){ const seed=state.content[state.activeLevel].words.slice(0,40).map(w=>w.sq); boxes['1']=seed; localStorage.setItem(KEYS.leitner, JSON.stringify(boxes)); } let current=null; function pick(){ for(const b of ['1','2','3','4','5']) if(boxes[b].length) return {box:b,word:boxes[b][0]}; return null; } function render(){ current=pick(); if(!current){ $('#flashFront').textContent='Â¡Sin tarjetas pendientes!'; $('#flashInfo').textContent=''; return;} const item=findWord(current.word); $('#flashFront').textContent=`${current.word}\nPL: ${item?item.pl:'-'}\nES: ${item?item.es:'-'}`; $('#flashInfo').textContent=`Caja ${current.box} â€” Total ${Object.values(boxes).reduce((a,b)=>a+b.length,0)}`; } function findWord(sq){ return state.content[state.activeLevel].words.find(w=>w.sq===sq); } $('#btnShow').onclick=()=>render(); $('#btnWrong').onclick=()=>{ const i=boxes[current.box].indexOf(current.word); if(i>-1) boxes[current.box].splice(i,1); boxes['1'].push(current.word); localStorage.setItem(KEYS.leitner,JSON.stringify(boxes)); render(); }; $('#btnRight').onclick=()=>{ const i=boxes[current.box].indexOf(current.word); if(i>-1) boxes[current.box].splice(i,1); const n=Math.min(5,parseInt(current.box)+1).toString(); boxes[n].push(current.word); localStorage.setItem(KEYS.leitner,JSON.stringify(boxes)); addCoins(2); render(); }; $('#btnAudio').onclick=()=>speak(current.word); render();}

// --- Export/Import ---
$('#btnExport').onclick=()=>{ const data={coins:state.coins,progress:JSON.parse(localStorage.getItem(KEYS.progress)||'{}'),leitner:JSON.parse(localStorage.getItem(KEYS.leitner)||'{}')}; const blob=new Blob([JSON.stringify(data,null,2)],{type:'application/json'}); const a=document.createElement('a');a.href=URL.createObjectURL(blob);a.download='progreso.json';a.click(); };
$('#fileImport').onchange=e=>{ const f=e.target.files[0]; if(!f) return; const fr=new FileReader(); fr.onload=()=>{ try{ const obj=JSON.parse(fr.result); localStorage.setItem(KEYS.coins,obj.coins||'0'); localStorage.setItem(KEYS.progress,JSON.stringify(obj.progress||{})); localStorage.setItem(KEYS.leitner,JSON.stringify(obj.leitner||{})); location.reload(); }catch{ toast('Archivo invÃ¡lido'); } }; fr.readAsText(f); };

window.addEventListener('DOMContentLoaded', load);
